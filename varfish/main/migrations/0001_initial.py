# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-09-25 16:05
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.CharField(max_length=32)),
                ('chromosome', models.CharField(max_length=32)),
                ('position', models.IntegerField()),
                ('reference', models.CharField(max_length=512)),
                ('alternative', models.CharField(max_length=512)),
                ('database', models.CharField(max_length=8, null=True)),
                ('effect', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64, null=True), size=None)),
                ('gene_id', models.CharField(max_length=64, null=True)),
                ('transcript_id', models.CharField(max_length=64, null=True)),
                ('transcript_coding', models.NullBooleanField()),
                ('hgvs_c', models.CharField(max_length=512, null=True)),
                ('hgvs_p', models.CharField(max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(max_length=512, unique=True)),
                ('pedigree', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Clinvar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.CharField(max_length=32)),
                ('chromosome', models.CharField(max_length=32)),
                ('position', models.IntegerField()),
                ('reference', models.CharField(max_length=512)),
                ('alternative', models.CharField(max_length=512)),
                ('start', models.IntegerField()),
                ('stop', models.IntegerField()),
                ('strand', models.CharField(max_length=1, null=True)),
                ('variation_type', models.CharField(max_length=16, null=True)),
                ('variation_id', models.IntegerField(null=True)),
                ('rcv', models.CharField(max_length=16, null=True)),
                ('scv', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=16, null=True), size=None)),
                ('allele_id', models.IntegerField(null=True)),
                ('symbol', models.CharField(max_length=16, null=True)),
                ('hgvs_c', models.CharField(max_length=512, null=True)),
                ('hgvs_p', models.CharField(max_length=512, null=True)),
                ('molecular_consequence', models.CharField(max_length=1024, null=True)),
                ('clinical_significance', models.CharField(max_length=64)),
                ('clinical_significance_ordered', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=512), size=None)),
                ('pathogenic', models.IntegerField()),
                ('likely_pathogenic', models.IntegerField()),
                ('uncertain_significance', models.IntegerField()),
                ('likely_benign', models.IntegerField()),
                ('benign', models.IntegerField()),
                ('review_status', models.CharField(max_length=64, null=True)),
                ('review_status_ordered', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64, null=True), size=None)),
                ('last_evaluated', models.DateField(null=True)),
                ('all_submitters', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=512, null=True), size=None)),
                ('submitters_ordered', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=512, null=True), size=None)),
                ('all_traits', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=512), size=None)),
                ('all_pmids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), size=None)),
                ('inheritance_modes', models.CharField(max_length=32, null=True)),
                ('age_of_onset', models.CharField(max_length=32, null=True)),
                ('prevalence', models.CharField(max_length=32, null=True)),
                ('disease_mechanism', models.CharField(max_length=32, null=True)),
                ('origin', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=16, null=True), size=None)),
                ('xrefs', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=16, null=True), size=None)),
                ('dates_ordered', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(null=True), size=None)),
                ('multi', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Dbsnp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.CharField(max_length=32)),
                ('chromosome', models.CharField(max_length=32)),
                ('position', models.IntegerField()),
                ('reference', models.CharField(max_length=512)),
                ('alternative', models.CharField(max_length=512)),
                ('rsid', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='EnsemblToKegg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_id', models.CharField(max_length=32)),
                ('kegginfo_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Exac',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.CharField(max_length=32)),
                ('chromosome', models.CharField(max_length=32)),
                ('position', models.IntegerField()),
                ('reference', models.CharField(max_length=512)),
                ('alternative', models.CharField(max_length=512)),
                ('ac', models.IntegerField(null=True)),
                ('ac_afr', models.IntegerField(null=True)),
                ('ac_amr', models.IntegerField(null=True)),
                ('ac_eas', models.IntegerField(null=True)),
                ('ac_fin', models.IntegerField(null=True)),
                ('ac_nfe', models.IntegerField(null=True)),
                ('ac_oth', models.IntegerField(null=True)),
                ('ac_sas', models.IntegerField(null=True)),
                ('an', models.IntegerField(null=True)),
                ('an_afr', models.IntegerField(null=True)),
                ('an_amr', models.IntegerField(null=True)),
                ('an_eas', models.IntegerField(null=True)),
                ('an_fin', models.IntegerField(null=True)),
                ('an_nfe', models.IntegerField(null=True)),
                ('an_oth', models.IntegerField(null=True)),
                ('an_sas', models.IntegerField(null=True)),
                ('hemi', models.IntegerField(null=True)),
                ('hemi_afr', models.IntegerField(null=True)),
                ('hemi_amr', models.IntegerField(null=True)),
                ('hemi_eas', models.IntegerField(null=True)),
                ('hemi_fin', models.IntegerField(null=True)),
                ('hemi_nfe', models.IntegerField(null=True)),
                ('hemi_oth', models.IntegerField(null=True)),
                ('hemi_sas', models.IntegerField(null=True)),
                ('hom', models.IntegerField(null=True)),
                ('hom_afr', models.IntegerField(null=True)),
                ('hom_amr', models.IntegerField(null=True)),
                ('hom_eas', models.IntegerField(null=True)),
                ('hom_fin', models.IntegerField(null=True)),
                ('hom_nfe', models.IntegerField(null=True)),
                ('hom_oth', models.IntegerField(null=True)),
                ('hom_sas', models.IntegerField(null=True)),
                ('popmax', models.CharField(max_length=8, null=True)),
                ('ac_popmax', models.IntegerField(null=True)),
                ('an_popmax', models.IntegerField(null=True)),
                ('af_popmax', models.FloatField(null=True)),
                ('hemi_popmax', models.IntegerField(null=True)),
                ('hom_popmax', models.IntegerField(null=True)),
                ('af', models.FloatField(null=True)),
                ('af_afr', models.FloatField(null=True)),
                ('af_amr', models.FloatField(null=True)),
                ('af_eas', models.FloatField(null=True)),
                ('af_fin', models.FloatField(null=True)),
                ('af_nfe', models.FloatField(null=True)),
                ('af_oth', models.FloatField(null=True)),
                ('af_sas', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gnomad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.CharField(max_length=32)),
                ('chromosome', models.CharField(max_length=32)),
                ('position', models.IntegerField()),
                ('reference', models.CharField(max_length=512)),
                ('alternative', models.CharField(max_length=512)),
                ('ac', models.IntegerField(null=True)),
                ('ac_afr', models.IntegerField(null=True)),
                ('ac_amr', models.IntegerField(null=True)),
                ('ac_asj', models.IntegerField(null=True)),
                ('ac_eas', models.IntegerField(null=True)),
                ('ac_fin', models.IntegerField(null=True)),
                ('ac_nfe', models.IntegerField(null=True)),
                ('ac_oth', models.IntegerField(null=True)),
                ('ac_sas', models.IntegerField(null=True)),
                ('an', models.IntegerField(null=True)),
                ('an_afr', models.IntegerField(null=True)),
                ('an_amr', models.IntegerField(null=True)),
                ('an_asj', models.IntegerField(null=True)),
                ('an_eas', models.IntegerField(null=True)),
                ('an_fin', models.IntegerField(null=True)),
                ('an_nfe', models.IntegerField(null=True)),
                ('an_oth', models.IntegerField(null=True)),
                ('an_sas', models.IntegerField(null=True)),
                ('hemi', models.IntegerField(null=True)),
                ('hemi_afr', models.IntegerField(null=True)),
                ('hemi_amr', models.IntegerField(null=True)),
                ('hemi_asj', models.IntegerField(null=True)),
                ('hemi_eas', models.IntegerField(null=True)),
                ('hemi_fin', models.IntegerField(null=True)),
                ('hemi_nfe', models.IntegerField(null=True)),
                ('hemi_oth', models.IntegerField(null=True)),
                ('hemi_sas', models.IntegerField(null=True)),
                ('hom', models.IntegerField(null=True)),
                ('hom_afr', models.IntegerField(null=True)),
                ('hom_amr', models.IntegerField(null=True)),
                ('hom_asj', models.IntegerField(null=True)),
                ('hom_eas', models.IntegerField(null=True)),
                ('hom_fin', models.IntegerField(null=True)),
                ('hom_nfe', models.IntegerField(null=True)),
                ('hom_oth', models.IntegerField(null=True)),
                ('hom_sas', models.IntegerField(null=True)),
                ('popmax', models.CharField(max_length=8, null=True)),
                ('ac_popmax', models.IntegerField(null=True)),
                ('an_popmax', models.IntegerField(null=True)),
                ('af_popmax', models.FloatField(null=True)),
                ('hemi_popmax', models.IntegerField(null=True)),
                ('hom_popmax', models.IntegerField(null=True)),
                ('af', models.FloatField(null=True)),
                ('af_afr', models.FloatField(null=True)),
                ('af_amr', models.FloatField(null=True)),
                ('af_asj', models.FloatField(null=True)),
                ('af_eas', models.FloatField(null=True)),
                ('af_fin', models.FloatField(null=True)),
                ('af_nfe', models.FloatField(null=True)),
                ('af_oth', models.FloatField(null=True)),
                ('af_sas', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hgnc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.CharField(max_length=16)),
                ('symbol', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=128)),
                ('locus_group', models.CharField(max_length=32, null=True)),
                ('locus_type', models.CharField(max_length=32, null=True)),
                ('status', models.CharField(max_length=32, null=True)),
                ('location', models.CharField(max_length=64, null=True)),
                ('location_sortable', models.CharField(max_length=64, null=True)),
                ('alias_symbol', models.CharField(max_length=128, null=True)),
                ('alias_name', models.CharField(max_length=512, null=True)),
                ('prev_symbol', models.CharField(max_length=128, null=True)),
                ('prev_name', models.CharField(max_length=1024, null=True)),
                ('gene_family', models.CharField(max_length=256, null=True)),
                ('gene_family_id', models.CharField(max_length=32, null=True)),
                ('date_approved_reserved', models.CharField(max_length=32, null=True)),
                ('date_symbol_changed', models.CharField(max_length=32, null=True)),
                ('date_name_changed', models.CharField(max_length=32, null=True)),
                ('date_modified', models.CharField(max_length=16, null=True)),
                ('entrez_id', models.CharField(max_length=16, null=True)),
                ('ensembl_gene_id', models.CharField(max_length=32, null=True)),
                ('vega_id', models.CharField(max_length=32, null=True)),
                ('ucsc_id', models.CharField(max_length=16, null=True)),
                ('ena', models.CharField(max_length=64, null=True)),
                ('refseq_accession', models.CharField(max_length=128, null=True)),
                ('ccds_id', models.CharField(max_length=256, null=True)),
                ('uniprot_ids', models.CharField(max_length=256, null=True)),
                ('pubmed_id', models.CharField(max_length=64, null=True)),
                ('mgd_id', models.CharField(max_length=256, null=True)),
                ('rgd_id', models.CharField(max_length=32, null=True)),
                ('lsdb', models.CharField(max_length=1024, null=True)),
                ('cosmic', models.CharField(max_length=32, null=True)),
                ('omim_id', models.CharField(max_length=32, null=True)),
                ('mirbase', models.CharField(max_length=16, null=True)),
                ('homeodb', models.CharField(max_length=16, null=True)),
                ('snornabase', models.CharField(max_length=16, null=True)),
                ('bioparadigms_slc', models.CharField(max_length=32, null=True)),
                ('orphanet', models.CharField(max_length=16, null=True)),
                ('pseudogene_org', models.CharField(max_length=32, null=True)),
                ('horde_id', models.CharField(max_length=16, null=True)),
                ('merops', models.CharField(max_length=16, null=True)),
                ('imgt', models.CharField(max_length=32, null=True)),
                ('iuphar', models.CharField(max_length=32, null=True)),
                ('kznf_gene_catalog', models.CharField(max_length=32, null=True)),
                ('namit_trnadb', models.CharField(max_length=16, null=True)),
                ('cd', models.CharField(max_length=16, null=True)),
                ('lncrnadb', models.CharField(max_length=32, null=True)),
                ('enzyme_id', models.CharField(max_length=64, null=True)),
                ('intermediate_filament_db', models.CharField(max_length=32, null=True)),
                ('rna_central_ids', models.CharField(max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hpo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('database_id', models.CharField(max_length=16)),
                ('name', models.CharField(max_length=1024, null=True)),
                ('qualifier', models.CharField(max_length=4, null=True)),
                ('hpo_id', models.CharField(max_length=16, null=True)),
                ('reference', models.CharField(max_length=128, null=True)),
                ('evidence', models.CharField(max_length=4, null=True)),
                ('onset', models.CharField(max_length=16, null=True)),
                ('frequency', models.CharField(max_length=16, null=True)),
                ('sex', models.CharField(max_length=8, null=True)),
                ('modifier', models.CharField(max_length=16, null=True)),
                ('aspect', models.CharField(max_length=1, null=True)),
                ('biocuration', models.CharField(max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImportInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table', models.CharField(max_length=16)),
                ('timestamp', models.DateTimeField(editable=False)),
                ('release', models.CharField(max_length=16)),
                ('comment', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='KeggInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kegg_id', models.CharField(max_length=16)),
                ('name', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='KnowngeneAA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chromosome', models.CharField(max_length=16)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('transcript_id', models.CharField(max_length=16)),
                ('alignment', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Mim2gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('omim_id', models.IntegerField()),
                ('omim_type', models.CharField(max_length=32, null=True)),
                ('entrez_id', models.CharField(max_length=16, null=True)),
                ('symbol', models.CharField(max_length=32, null=True)),
                ('ensembl_gene_id', models.CharField(max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mim2geneMedgen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('omim_id', models.IntegerField()),
                ('entrez_id', models.CharField(max_length=16, null=True)),
                ('omim_type', models.CharField(max_length=32, null=True)),
                ('source', models.CharField(max_length=32, null=True)),
                ('medgen_cui', models.CharField(max_length=8, null=True)),
                ('comment', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RefseqToKegg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_id', models.CharField(max_length=32)),
                ('kegginfo_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SmallVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.CharField(max_length=32)),
                ('chromosome', models.CharField(max_length=32)),
                ('position', models.IntegerField()),
                ('reference', models.CharField(max_length=512)),
                ('alternative', models.CharField(max_length=512)),
                ('var_type', models.CharField(max_length=8)),
                ('case_id', models.IntegerField()),
                ('genotype', django.contrib.postgres.fields.jsonb.JSONField()),
                ('in_clinvar', models.NullBooleanField()),
                ('exac_frequency', models.FloatField(null=True)),
                ('exac_homozygous', models.IntegerField(null=True)),
                ('exac_heterozygous', models.IntegerField(null=True)),
                ('exac_hemizygous', models.IntegerField(null=True)),
                ('thousand_genomes_frequency', models.FloatField(null=True)),
                ('thousand_genomes_homozygous', models.IntegerField(null=True)),
                ('thousand_genomes_heterozygous', models.IntegerField(null=True)),
                ('thousand_genomes_hemizygous', models.IntegerField(null=True)),
                ('gnomad_exomes_frequency', models.FloatField(null=True)),
                ('gnomad_exomes_homozygous', models.IntegerField(null=True)),
                ('gnomad_exomes_heterozygous', models.IntegerField(null=True)),
                ('gnomad_exomes_hemizygous', models.IntegerField(null=True)),
                ('gnomad_genomes_frequency', models.FloatField(null=True)),
                ('gnomad_genomes_homozygous', models.IntegerField(null=True)),
                ('gnomad_genomes_heterozygous', models.IntegerField(null=True)),
                ('gnomad_genomes_hemizygous', models.IntegerField(null=True)),
                ('refseq_gene_id', models.CharField(max_length=16, null=True)),
                ('refseq_transcript_id', models.CharField(max_length=16, null=True)),
                ('refseq_transcript_coding', models.NullBooleanField()),
                ('refseq_hgvs_c', models.CharField(max_length=512, null=True)),
                ('refseq_hgvs_p', models.CharField(max_length=512, null=True)),
                ('refseq_effect', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), null=True, size=None)),
                ('ensembl_gene_id', models.CharField(max_length=16, null=True)),
                ('ensembl_transcript_id', models.CharField(max_length=16, null=True)),
                ('ensembl_transcript_coding', models.NullBooleanField()),
                ('ensembl_hgvs_c', models.CharField(max_length=512, null=True)),
                ('ensembl_hgvs_p', models.CharField(max_length=512, null=True)),
                ('ensembl_effect', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64, null=True), size=None)),
            ],
        ),
        migrations.AddIndex(
            model_name='smallvariant',
            index=models.Index(fields=['exac_frequency', 'gnomad_exomes_frequency', 'gnomad_genomes_frequency', 'thousand_genomes_frequency', 'exac_homozygous', 'gnomad_exomes_homozygous', 'gnomad_genomes_homozygous', 'thousand_genomes_homozygous', 'refseq_effect'], name='main_smallv_exac_fr_8fc1e4_idx'),
        ),
        migrations.AddIndex(
            model_name='smallvariant',
            index=models.Index(fields=['exac_frequency', 'gnomad_exomes_frequency', 'gnomad_genomes_frequency', 'thousand_genomes_frequency', 'exac_homozygous', 'gnomad_exomes_homozygous', 'gnomad_genomes_homozygous', 'thousand_genomes_homozygous', 'ensembl_effect'], name='main_smallv_exac_fr_003164_idx'),
        ),
        migrations.AddIndex(
            model_name='smallvariant',
            index=models.Index(fields=['release', 'chromosome', 'position', 'reference', 'alternative'], name='main_smallv_release_eb4638_idx'),
        ),
        migrations.AddIndex(
            model_name='smallvariant',
            index=models.Index(fields=['release', 'chromosome', 'position', 'reference', 'alternative', 'ensembl_gene_id'], name='main_smallv_release_cf5358_idx'),
        ),
        migrations.AddIndex(
            model_name='smallvariant',
            index=models.Index(fields=['release', 'chromosome', 'position', 'reference', 'alternative', 'refseq_gene_id'], name='main_smallv_release_c991d9_idx'),
        ),
        migrations.AddIndex(
            model_name='smallvariant',
            index=models.Index(fields=['ensembl_gene_id'], name='main_smallv_ensembl_7e8efd_idx'),
        ),
        migrations.AddIndex(
            model_name='smallvariant',
            index=models.Index(fields=['refseq_gene_id'], name='main_smallv_refseq__bb595c_idx'),
        ),
        migrations.AddIndex(
            model_name='smallvariant',
            index=models.Index(fields=['case_id'], name='main_smallv_case_id_bd9c4e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='smallvariant',
            unique_together=set([('release', 'chromosome', 'position', 'reference', 'alternative', 'case_id', 'ensembl_gene_id', 'refseq_gene_id')]),
        ),
        migrations.AddIndex(
            model_name='refseqtokegg',
            index=models.Index(fields=['gene_id'], name='main_refseq_gene_id_b849fd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='refseqtokegg',
            unique_together=set([('gene_id', 'kegginfo_id')]),
        ),
        migrations.AddIndex(
            model_name='mim2genemedgen',
            index=models.Index(fields=['entrez_id'], name='main_mim2ge_entrez__91ff37_idx'),
        ),
        migrations.AddIndex(
            model_name='knowngeneaa',
            index=models.Index(fields=['chromosome', 'start', 'end'], name='main_knowng_chromos_ef2dab_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='knowngeneaa',
            unique_together=set([('chromosome', 'start', 'end', 'transcript_id')]),
        ),
        migrations.AddIndex(
            model_name='hpo',
            index=models.Index(fields=['database_id'], name='main_hpo_databas_3e3fa3_idx'),
        ),
        migrations.AddIndex(
            model_name='hgnc',
            index=models.Index(fields=['ensembl_gene_id'], name='main_hgnc_ensembl_b371c1_idx'),
        ),
        migrations.AddIndex(
            model_name='gnomad',
            index=models.Index(fields=['release', 'chromosome', 'position', 'reference', 'alternative'], name='main_gnomad_release_68daa9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gnomad',
            unique_together=set([('release', 'chromosome', 'position', 'reference', 'alternative')]),
        ),
        migrations.AddIndex(
            model_name='exac',
            index=models.Index(fields=['release', 'chromosome', 'position', 'reference', 'alternative'], name='main_exac_release_745635_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='exac',
            unique_together=set([('release', 'chromosome', 'position', 'reference', 'alternative')]),
        ),
        migrations.AddIndex(
            model_name='ensembltokegg',
            index=models.Index(fields=['gene_id'], name='main_ensemb_gene_id_998241_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ensembltokegg',
            unique_together=set([('gene_id', 'kegginfo_id')]),
        ),
        migrations.AddIndex(
            model_name='dbsnp',
            index=models.Index(fields=['release', 'chromosome', 'position', 'reference', 'alternative'], name='main_dbsnp_release_2b69d5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dbsnp',
            unique_together=set([('release', 'chromosome', 'position', 'reference', 'alternative')]),
        ),
        migrations.AddIndex(
            model_name='clinvar',
            index=models.Index(fields=['release', 'chromosome', 'position', 'reference', 'alternative'], name='main_clinva_release_90baa5_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['name'], name='main_case_name_6a9c50_idx'),
        ),
        migrations.AddIndex(
            model_name='annotation',
            index=models.Index(fields=['release', 'chromosome', 'position', 'reference', 'alternative', 'gene_id'], name='main_annota_release_3b6aa8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='annotation',
            unique_together=set([('release', 'chromosome', 'position', 'reference', 'alternative', 'transcript_id')]),
        ),
    ]
